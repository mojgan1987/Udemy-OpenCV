import cv2
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

def load_img():
    img = cv2.imread('C://Users//Mojgan//Documents//Python/Udemy/OpenCV/Resources/original/Computer-Vision-with-Python/DATA/bricks.jpg').astype(np.float32) / 255
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    return img
    
def display_img(img):
    fig = plt.figure(figsize=(12,10))
    ax = fig.add_subplot(111)
    ax.imshow(img)
    
img1 = load_img()
display_img(img1)

# gamma correction: increase/decrease brightness
gamma = 4 # less than 1 for brighter
result = np.power(img1, gamma)
display_img(result)

# load image
img = load_img()
font = cv2.FONT_HERSHEY_COMPLEX
cv2.putText(img, text='bricks', org=(10,600), fontFace=font, fontScale=10,color=(255,0,0), thickness=4)
display_img(img)

# blurring: low pass filter
kernel = np.ones(shape=(5,5), dtype=np.float32)/25
# apply 2D filter: blur
dst = cv2.filter2D(img,-1, kernel) #-1 input depth=output depth
display_img(dst)


##
img = load_img()
font = cv2.FONT_HERSHEY_COMPLEX
cv2.putText(img, text='bricks', org=(10,600), fontFace=font, fontScale=10,color=(255,0,0), thickness=4)
display_img(img)

# smoothing
blurred = cv2.blur(img,ksize=(5,5))
display_img(blurred)

##
img = load_img()
font = cv2.FONT_HERSHEY_COMPLEX
cv2.putText(img, text='bricks', org=(10,600), fontFace=font, fontScale=10,color=(255,0,0), thickness=4)
display_img(img)
# guassian
blurred_img_g = cv2.GaussianBlur(img, (5,5), 10)
display_img(blurred_img_g)

##
img = load_img()
font = cv2.FONT_HERSHEY_COMPLEX
cv2.putText(img, text='bricks', org=(10,600), fontFace=font, fontScale=10,color=(255,0,0), thickness=4)
display_img(img)
# median blur: text remained but bricks less details
res = cv2.medianBlur(img, 5)
display_img(res)                    

##
img = load_img()
font = cv2.FONT_HERSHEY_COMPLEX
cv2.putText(img, text='bricks', org=(10,600), fontFace=font, fontScale=10,color=(255,0,0), thickness=4)
display_img(img)
#
blur = cv2.bilateralFilter(img, 9, 75, 75)
display_img(blur)

## in application
# original image
img  = cv2.imread('C://Users//Mojgan//Documents//Python/Udemy/OpenCV/Resources/original/Computer-Vision-with-Python/DATA/sammy.jpg')
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
display_img(img)

# noisy image
noisy_image = cv2.imread('C://Users//Mojgan//Documents//Python/Udemy/OpenCV/Resources/original/Computer-Vision-with-Python/DATA/sammy_noise.jpg')
noisy_image = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
display_img(noisy_image)

# to correct the noisy image
median = cv2.medianBlur(noisy_image,5)
display_img(median)
